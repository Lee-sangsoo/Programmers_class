- 메뉴 리뉴얼
 (전형적인 브루트포스, map 사용 문제)
 1. 비트마스크를 사용한 브루트포스 조합 구하기
   for(int i = 0; i<(1 << size); i++){ ----- 1
     for(int j = 0; j<size; j++){ ----------- 2
       if(i & (1 << j)){ ... } } }    ----------- 3

	1 - 0부터 시작하면 공집합 포함, 1부터 시작하면 공집합 미포함
	     만약 size가 3이라면 (1 << 3) = 1000 이므로
                    000 ~ 111 까지를 확인한다는 뜻이다.
	
	2 - 조합을 구해야 하는 매체이다. 문제를 예를 들면 ABFGH에서 구한다는 뜻이다.

	3 - i가 000 ~ 111 이라고 하면 (1 << j)를 통해 1, 10, 100 까지 확인한다는 뜻이다.
	    ABC를 예로 들면  001 = A, 010 = B, 011 = AB, .... 이런 식이다.

	-> 값의 순서는 차례대로 담긴다 (ABC -> A, B, C, AB, ...)

  2. map을 순회하는 방법
    map<> m
    for(auto i : m){
      cout << m.first << '\n';       -> key
      cout << m.second << '\n';   -> value
    }
    -> 이처럼 순회하며 값을 확인 가능하다.

  3. map 배열처럼 사용
   map<> m[10]  -> map을 인덱스로 관리 가능하다
   이 문제에서 쓰임은 음식 개수에 따라 관리가 가능하다
   m[음식개수][조합] 과 같이 사용된다.